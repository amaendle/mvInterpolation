% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shepard.R
\name{wintpl}
\alias{wintpl}
\title{Do the multivaiate interpolation based on weights and drift functions}
\usage{
wintpl(data, xinp, weights, drift = 0, p = NULL, vparam = NULL)
}
\arguments{
\item{data}{A matrix of the points for which the function is known}

\item{xinp}{Coordinates, where interpolation has to be computed}

\item{weights}{Vector of the weights for the interpolation}

\item{drift}{Matrix of the drift for the interpolation}

\item{p}{Scalar, parameter for the weights, currently not used}

\item{vparam}{Scalar, parameter for the slopes, currently not used}
}
\value{
The interpolated value(s) at xinp
}
\description{
The drift is needed for interpolation by angular distance weighting extended by slopes.
Interpolation weights include either all observations or are based on the nearest neighbors
(4 to 10 neighbors, depending on the distance).
}
\details{
The interpoliation works for a multidimensional input space and also for multi-responses.
}
\examples{
mydata <- matrix(runif(10*4)*10, ncol=4)
mydata <- cbind(mydata,abs(apply(mydata,1,sum)-3),abs(apply(mydata,1,prod)-4))
inp <- rep(4,4)
#Inverse distance weighting (based on all observations)
wintpl(data=mydata, xinp=inp, weights=di_get(data=mydata, xinp=inp,2))
#Inverse distance weighting (based on nearest neighbors)
wintpl(data=mydata, xinp=inp, weights=si_get(data=mydata, xinp=inp)^2)
#Angular distance weighting
wintpl(data=mydata, xinp=inp, weights=ti_get(data=mydata, xinp=inp))
#Angular distance weighting under consideration of slopes
wintpl(data=mydata, xinp=inp, weights=ti_get(data=mydata, xinp=inp), drift=slopezi_get(mydata,inp))
}
